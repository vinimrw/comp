P(1) <start> := <variaveis_declaracao><funcao_declaracao><algoritmo_declaracao>

P(6) <declaracao> := <tipo_primitivo> token_identificador

P(7) <tipo_primitivo> := | inteiro 
P(11)			| booleano

P(15) <valor_primitivo> := token_inteiro 
P(19)		| verdadeiro 
P(20)		| falso

P(21) <variaveis_declaracao> := variaveis { <declaracao_var> }
P(22) <declaracao_var> := <declaracao>; <declaracao_var>
P(23)				| token_identificador token_identificador; <declaracao_var> 
P(24)				| Ɛ

P(32) <funcao_declaracao> := funcao <tipo_return> token_identificador (<decl_param>)  { <deriva_cont_funcao>  } <funcao_declaracao> 
P(33)				      | Ɛ

P(34) <decl_param> := <declaracao>  <deriva_param>
P(35)			| registro token_identificador <deriva_param>
P(36) <deriva_param> := ,<decl_param>
P(37)			| Ɛ
P(42) <deriva_cont_funcao> := <variaveis_declaracao> <decl_comandos> retorno <return_deriva>;
P(43)				      | <decl_comandos> retorno <return_deriva>;
P(44) <decl_comandos> := <comandos> <decl_comandos>
P(45)				| Ɛ
P(46) <tipo_return> := <tipo_primitivo> 
P(48)			| vazio
P(49) <return_deriva> := vazio
P(50)			| token_identificador
P(51)			| <valor_primitivo>

P(52) <algoritmo_declaracao> :=  algoritmo {<deriva_cont_principal> }
P(53) <deriva_cont_principal> := <declaracao_var> <decl_comandos>
P(54)				| <decl_comandos>
P(55)				| Ɛ

P(56) <comandos> := <se_declaracao> 
P(57)			| <enquanto_declaracao> 
P(59)			| <escreva_declaracao> 
P(61)			| Ɛ

P(62) <se_declaracao> := se (<exp_rel_bol>) {<decl_comandos>}<senao_decl>
P(63) <senao_decl> := senão {<decl_comandos>} 
P(64)			| Ɛ

P(65) <enquanto_declaracao> := enquanto (<exp_rel_bol>) { <decl_comandos> }
P(67) <escreva_declaracao> := escreva (<exp_escreva>);
P(68) <exp_escreva> := <exp_imprime><exp_escreva_deriva><exp_escreva> 
P(69)			| Ɛ

P(70) <exp_escreva_deriva> := ,<exp_imprime> 
P(71)				| Ɛ

P(72) <exp_imprime> := token_cadeia 
P(74)			| token_identificador 
P(75)			| (<exp_simples>)

P(85) <exp_rel_bol> := <exp_simples> <op_relacional> <exp_simples> <exp_rel_deriva>
P(86) <exp_rel_deriva> := <op_bolleano> <exp_simples> <op_relacional> <exp_simples> <exp_rel_deriva> 
P(87)			| Ɛ

P(88) <op_relacional> := < <op_rel_deriva> 
P(89)			| > <op_rel_deriva>
P(90)			| == 
P(91)			| !=
P(92) <op_rel_deriva> := = 
P(93): 			| Ɛ

P(94) <op_bolleano> := && 
P(95)			| ||

P(96) <exp_aritmetica> := token_identificador = <exp_simples>
P(97) <exp_simples> := <op_ss><termo><termo_deriva> 
P(98)			| <termo><termo_deriva>
P(99) <termo_deriva> := +<op_soma_deriva>
P(100)			| -<op_sub_deriva> 
P(101)			| Ɛ
P(102) <op_soma_deriva> := <termo><termo_deriva> 
P(103)			| +
P(104) <op_sub_deriva> := <termo><termo_deriva> 
P(105)			| -
P(106) <op_ss> := + 
P(107)		| -
P(110) <termo> := <fator><fator_deriva>
P(111) <fator_deriva> := <op_md><fator><fator_deriva> 
P(112)			| Ɛ
P(113) <op_md> := * 
P(114)		| /
P(115) <fator> := token_identificador 
P(116)		| token_inteiro 
P(117)		| (<exp_simples>) 